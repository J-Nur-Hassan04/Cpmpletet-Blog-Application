Dead codes

//	@RequestMapping(value = { "/posts/searchedposts" }, method = RequestMethod.GET)
//	public ModelAndView getSearchedPosts(HttpServletRequest request) {
//		ModelAndView modelAndView = new ModelAndView();
//		String searchArg = request.getParameter("searchArg").toUpperCase();
//		int start = 0;
//		int limit = 2;
//
//		Page<Post> postList;
//		if (request.getParameter("pageNumber") == null) {
//			postList = postService.getSearchedPosts(searchArg, start, limit);
//			modelAndView.addObject("pageNumber", start);
//			modelAndView.addObject("postList", postList);
//			modelAndView.addObject("totalPages", postList.getTotalPages());
//		}
//		if (request.getParameter("pageNumber") != null) {
//			start = Integer.parseInt(request.getParameter("pageNumber"));
//			postList = postService.getSearchedPosts(searchArg, start, limit);
//			modelAndView.addObject("postList", postList);
//			modelAndView.addObject("pageNumber", start);
//			modelAndView.addObject("totalPages", postList.getTotalPages());
//		}
//		modelAndView.addObject("searchArg", searchArg);
//		modelAndView.addObject("limit", limit);
//		modelAndView.setViewName("searchresultpage");
//
//		return modelAndView;
//
//	}

//	@RequestMapping(value = { "/posts/searchedposts" }, method = RequestMethod.GET)
//	public ModelAndView getSearchedPostsByAny(String searchArg) {
//		ModelAndView modelAndView = new ModelAndView();
//		modelAndView.addObject("args", "Search Result Of : " + searchArg);
//
//		searchArg = searchArg.toUpperCase();
//		List<Post> tagNamedPosts = postService.getSearchedPosts(searchArg);
//
//		modelAndView.addObject("authorList", postService.getAllAuthor());
//		modelAndView.addObject("tagsList", tagService.getAlltag());
//		modelAndView.addObject("postList", tagNamedPosts);
//		modelAndView.setViewName("resultpage");
//
//		return modelAndView;
//
//	}

//refactored
//	@RequestMapping(value = { "/posts/tag" }, method = RequestMethod.GET)
//	public ModelAndView getTagedPosts(
//			@RequestParam(name = "tagName", required = false, defaultValue = "#") String[] tagName) {
//		ModelAndView modelAndView = new ModelAndView();
//
//		modelAndView.addObject("postList", postRepo.findAllByTagsArray(tagName));
//		modelAndView.addObject("authorList", postRepo.getAllAuthors());
//		modelAndView.addObject("args", "Filtred by tag : " + Arrays.toString(tagName));
//		modelAndView.addObject("tagsList", tagRepo.getAllTags());
//		modelAndView.setViewName("resultpage");
//
//		return modelAndView;
//	}
//
//	@RequestMapping(value = { "/posts/author" }, method = RequestMethod.GET)
//	public ModelAndView getFilteredAuthor(
//			@RequestParam(name = "authorName", required = false, defaultValue = "author") String[] authors) {
//		ModelAndView modelAndView = new ModelAndView();
//
//		modelAndView.addObject("postList", postRepo.findAllByAuthorArray(authors));
//		modelAndView.addObject("authorList", postRepo.getAllAuthors());
//		modelAndView.addObject("args", "Filtred by Author : " + Arrays.toString(authors));
//		modelAndView.addObject("tagsList", tagRepo.getAllTags());
//		modelAndView.setViewName("resultpage");
//
//		return modelAndView;
//	}


<!-- <div class="tag-filter">
			<div class="dropdown">
				<button class="dropandwritebtn">Filter by Tags</button>
				<div class="dropdown-content">
					<form action="/posts/tag">
						<div th:each="tag : ${tagsList}">
							<input th:value="${tag}" type="checkbox" name="tagName">
							<label th:text="${tag}"></label>
						</div>
						<button class="dropandwritebtn" type="submit">submit</button>
					</form>
				</div>
			</div>
		</div> -->


		<!-- <div class="author-filter">
			<div class="dropdown">
				<button class="dropandwritebtn">Filter by Author</button>
				<div class="dropdown-content">
					<form action="/posts/author">
						<div th:each="author : ${authorList}">
							<input th:value="${author}" type="checkbox" name="authorName">
							<label th:text="${author}"></label>
						</div>
						<button class="dropandwritebtn" type="submit">submit</button>
					</form>
				</div>
			</div>
		</div> -->


		<!-- <div class="search">
			<form action="/posts/searchedposts">
				<input name="searchArg" type="text">
				<button class="dropandwritebtn" type="submit">search</button>
			</form>
		</div> -->